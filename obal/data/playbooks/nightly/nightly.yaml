---
- name: Build a nightly version of a package
  hosts:
    - packages
  serial: 1
  gather_facts: false
  vars:
    build_package_tito_releaser_args: "{{ nightly_package_tito_releaser_args | default([]) }}"
  roles:
    - package_variables
  tasks:
    - name: 'Legacy nightly building'
      when: nightly_sourcefiles is not defined and nightly_githash is not defined
      block:
        - name: 'Set nightly_releaser'
          set_fact:
            releasers:
              - "{{ nightly_releaser }}"

        - import_role:
            name: build_package

    - name: 'Nightly building'
      when: nightly_sourcefiles is defined and nightly_githash is defined
      block:
        - name: 'Set package_dir'
          set_fact:
            package_dir: "{{ inventory_dir }}/{{ package_base_dir }}/{{ inventory_hostname }}"

        - name: 'Set global_nightly_macro'
          set_fact:
            global_nightly_macro:
              "%global nightly .{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}git{{ nightly_githash[:7] }}"

        - name: 'Copy source files'
          copy:
            src: "{{ item }}"
            dest: "{{ package_dir }}"
            mode: preserve
          with_items: "{{ nightly_sourcefiles }}"

        - name: 'Get nightly_specfile'
          find:
            pattern: "*.spec"
            path: "{{ package_dir }}"
          register: nightly_specfile

        - name: 'Set nightly_specfile_path'
          set_fact:
            nightly_specfile_path: "{{ nightly_specfile.files[0].path }}"

        - name: 'Add nightly macro to specfile'
          lineinfile:
            path: "{{ nightly_specfile_path }}"
            line: "{{ global_nightly_macro }}"
            insertbefore: BOF
            backup: true
          register: original_specfile

        - import_role:
            name: build_package
      always:
        - name: 'Restore spec file'
          copy:
            src: "{{ original_specfile.backup }}"
            dest: "{{ nightly_specfile_path }}"
            mode: preserve
          when: original_specfile is defined

        - name: 'Delete copied source files'
          file:
            state: absent
            path: "{{ package_dir }}/{{ item | basename }}"
          with_items: "{{ nightly_sourcefiles }}"
          when: nightly_sourcefiles is defined
