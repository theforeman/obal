---
- name: "Confirm package is whitelisted"
  package_whitelist_check:
    releasers_conf: "{{ inventory_dir }}/rel-eng/releasers.conf"
    spec_file_path: "{{ spec_file_path }}"
    releasers: "{{ releasers }}"
    build_command: "{{ build_package_koji_command }}"
  when: build_package_koji_whitelist_check | bool

- name: 'Set tito_releasers for brew scratch'
  set_fact:
    build_package_tito_releasers: "{{ releasers | map('replace', 'dist-git', 'scratch') | list }}"
  when: build_package_koji_command == 'brew' and build_package_scratch

- name: 'Set tito_releasers'
  set_fact:
    build_package_tito_releasers: "{{ releasers }}"
  when: build_package_koji_command != 'brew' or not build_package_scratch

- name: 'Release to {{ build_package_koji_command }}'
  tito_release:
    directory: "{{ inventory_dir }}/{{ package_base_dir }}/{{ inventory_hostname }}"
    arguments: "{{ build_package_tito_args }}"
    scratch: "{{ build_package_scratch and build_package_koji_command != 'brew' }}"
    test: "{{ build_package_test }}"
    releasers: "{{ build_package_tito_releasers }}"
    releaser_arguments: "{{ build_package_tito_releaser_args }}"
  register: build_package_tito_release

- name: 'Created tasks'
  debug:
    var: build_package_tito_release.task_urls

- name: 'Wait for tasks to finish'
  when: build_package_wait|bool
  block:
    - name: Define koji_tasks
      set_fact:
        koji_tasks: "{{ build_package_tito_release.tasks }}"

    - name: "Watch {{ build_package_koji_command }} task(s)"
      command: "{{ build_package_koji_command }} watch-task {{ koji_tasks | join(' ') }}"
      ignore_errors: true
      register: build_package_koji_status
      changed_when: false

    - name: 'Download task logs'
      include_tasks: download_logs.yml
      when: build_package_download_logs|bool

    - name: 'Failed build'
      fail:
        msg: "The build in {{ build_package_koji_command }}  has failed"
      when: (build_package_koji_status is failed) and ('Build already exists' not in build_package_koji_status.stdout)

    - name: "Get {{ build_package_koji_command }} build detals"
      command: "{{ build_package_koji_command }} taskinfo -v {{ item }}"
      with_items: "{{ koji_tasks }}"
      changed_when: false
      register: build_package_koji_task_info

    - name: "Filter {{ build_package_build_system }} output"
      set_fact:
        build_package_koji_task_data:
          "{{ build_package_koji_task_info.results | map(attribute='stdout') | map('from_yaml') | list }}"

    - name: 'Wait for builds to apear in the repo'
      include_tasks: waitrepo.yml
      when:
        - build_package_waitrepo|bool
        - not build_package_scratch
        - build_package_koji_status is succeeded

- name: 'Download task results'
  include_tasks: download_rpms.yml
  when: build_package_download_rpms|bool
