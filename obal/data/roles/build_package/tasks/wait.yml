---
- block:
    - name: "Get {{ build_package_koji_command }} task ids"
      set_fact:
        build_package_koji_tasks: "{{ build_package_tito_release.stdout_lines \
          | select('match', '^Created task:.*') \
          | map('regex_replace', '^Created task:\\s(\\d+)', '\\1') \
          | list }}"

    - name: "Watch {{ build_package_koji_command }} task(s)"
      command: "{{ build_package_koji_command }} watch-task {{ build_package_koji_tasks | join(' ') }}"
      ignore_errors: yes
      register: build_package_koji_status
      changed_when: False
      when: (build_package_tito_release is successful)

    - name: 'Download task logs'
      include_tasks: download_logs.yml
      when: build_package_download_logs|bool

    - name: 'Failed build'
      fail:
        msg: "The build in {{ build_package_koji_command }}  has failed"
      when: (build_package_koji_status is failed) and ('Build already exists' not in build_package_koji_status.stdout)

    - name: "Get {{ build_package_koji_command }} build detals"
      command: "{{ build_package_koji_command }} taskinfo -v {{ item }}"
      with_items: "{{ build_package_koji_tasks }}"
      changed_when: False
      register: build_package_koji_task_info

    - name: "Filter {{ build_package_build_system }} output"
      set_fact:
        build_package_koji_task_data:
          "{{ build_package_koji_task_info.results | map(attribute='stdout') | map('from_yaml') | list }}"

    - name: 'Wait for builds to apear in the repo'
      include_tasks: waitrepo.yml
      when:
        - build_package_waitrepo|bool
        - not build_package_scratch
        - build_package_koji_status is succeeded
  when: build_package_build_system == 'koji'

- block:
    - name: "Get copr task IDs"
      set_fact:
        build_package_copr_tasks: "{{ build_package_tito_release.stdout_lines \
          | select('match', '^Created builds:.*') \
          | map('regex_replace', '^Created builds:\\s(\\d+)', '\\1') \
          | list }}"

    - name: "Watch copr task(s)"
      command: "copr-cli watch-build {{ build_package_copr_tasks | join(' ') }}"
      ignore_errors: yes
      register: build_package_copr_status
      changed_when: False
      when: (build_package_tito_release is successful)

    - name: 'Failed build'
      fail:
        msg: "The build in Copr  has failed"
      when: (build_package_copr_status is failed)
  when: build_package_build_system == 'copr'
